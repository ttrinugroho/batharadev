'use strict';

/*! *****************************************************************************
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */

var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};

function __awaiter(thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}

function __generator(thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
}

// url == https://example.com/foo/bar
// Ensures consistent formatting for href
function scrollToTop(type) {
    if (['link', 'go'].includes(type)) {
        window.scrollTo({ top: 0 });
    }
}
function fullURL(url) {
    var href = new URL(url || window.location.href).href;
    return href.endsWith('/') ? href : href + "/";
}
// Changes URL on history
function addToPushState(url) {
    if (!window.history.state || window.history.state.url !== url) {
        window.history.pushState({ url: url }, 'internalLink', url);
    }
}
// Smooth stroll to anchor link
function scrollToAnchor(anchor) {
    document
        .querySelector(anchor)
        .scrollIntoView({ behavior: 'smooth', block: 'start' });
}
// Handles back button
function handlePopState(e) {
    var next = fullURL();
    addToPushState(next);
    return { type: 'popstate', next: next };
}
// Segments link clicks into types
function handleLinkClick(e) {
    var anchor;
    var target = e.target || e.srcElement;
    if (e.altKey || e.ctrlKey || e.metaKey || e.shiftKey) {
        return { type: 'disqualified' };
    }
    // Find element containing href
    for (var n = e.target; n.parentNode; n = n.parentNode) {
        if (n.nodeName === 'A') {
            anchor = n;
            break;
        }
    }
    // External links
    if (anchor && anchor.host !== location.host) {
        anchor.target = '_blank';
        return { type: 'external' };
    }
    // Link qualified for hotroute
    if (anchor && anchor.hasAttribute('href')) {
        var ahref = anchor.getAttribute('href');
        var url = new URL(ahref, location.origin);
        // Start Quick Load
        e.preventDefault();
        // If anchor, scroll,
        if (ahref && ahref.startsWith('#')) {
            scrollToAnchor(ahref);
            return { type: 'scrolled' };
        }
        else {
            var next = fullURL(url.href);
            var prev = fullURL();
            addToPushState(next);
            return { type: 'link', next: next, prev: prev };
        }
    }
    else {
        return { type: 'noop' };
    }
}

function formatNextDocument(html) {
    var parser = new DOMParser();
    var nextDoc = parser.parseFromString(html, 'text/html');
    // Allow specific elements to be cloned over
    var keep = nextDoc.querySelectorAll('[data-stateful]');
    keep.forEach(function (node) {
        var cur = document.getElementById(node.id);
        if (cur) {
            node.replaceWith(cur);
        }
    });
    return nextDoc;
}
function mergeHead(nextHead) {
    var curHead = document.head;
    var freshNodes = nextHead.querySelectorAll('[data-reload], title, meta');
    freshNodes.forEach(function (node) {
        var replace;
        if (node.tagName === 'TITLE') {
            replace = curHead.querySelector('title');
        }
        else if (node.tagName === 'META') {
            var id = node.getAttribute('name');
            replace = curHead.querySelector("meta[name=\"" + id + "\"]");
        }
        else {
            var id = node.getAttribute('data-reload');
            replace = curHead.querySelector("[data-reload=\"" + id + "\"]");
        }
        if (replace) {
            if (replace.tagName === 'SCRIPT') {
                var newScript = document.createElement('script');
                newScript.src = replace.src;
                newScript.dataset.reload = '';
                replace.replaceWith(newScript);
            }
            else {
                replace.replaceWith(node);
            }
        }
        else {
            for (var _i = 0, _a = Array.from(document.head.childNodes); _i < _a.length; _i++) {
                var n = _a[_i];
                if (n.isEqualNode(node))
                    return;
            }
            document.head.appendChild(node);
        }
    });
    return curHead;
}

var e={};function t(e){return new Promise(function(t,n){var r=new XMLHttpRequest;r.open("GET",e,r.withCredentials=!0),r.onload=function(){200===r.status?t():n();},r.send();})}var n,r,i=(n="prefetch",((r=document.createElement("link")).relList||{}).supports&&r.relList.supports(n)?function(e){return new Promise(function(t,n){var r=document.createElement("link");r.rel="prefetch",r.href=e,r.onload=t,r.onerror=n,document.head.appendChild(r);})}:t);function o(n,r,o){if(!(e[n]||(o=navigator.connection)&&((o.effectiveType||"").includes("2g")||o.saveData)))return (r?function(e){return null==self.fetch?t(e):fetch(e,{credentials:"include"})}:i)(n).then(function(){e[n]=!0;})}var u=u||function(e){var t=Date.now();return setTimeout(function(){e({didTimeout:!1,timeRemaining:function(){return Math.max(0,50-(Date.now()-t))}});},1)},c=new Set,a=new IntersectionObserver(function(e){e.forEach(function(e){if(e.isIntersecting){var t=e.target.href;c.has(t)&&f(t);}});});function f(e){c.delete(e),o(new URL(e,location.href).toString(),a.priority);}function quicklink(e){e=Object.assign({timeout:2e3,priority:!1,timeoutFn:u,el:document},e),a.priority=e.priority;var t=e.origins||[location.hostname],n=e.ignores||[];e.timeoutFn(function(){e.urls?e.urls.forEach(f):Array.from(e.el.querySelectorAll("a"),function(e){a.observe(e),t.length&&!t.includes(e.hostname)||function e(t,n){return Array.isArray(n)?n.some(function(n){return e(t,n)}):(n.test||n).call(n,t.href,t)}(e,n)||c.add(e.href);});},{timeout:e.timeout});}

var defaultOpts = {
    log: false,
    prefetch: true
};
var Router = /** @class */ (function () {
    function Router(opts) {
        var _this = this;
        this.opts = opts;
        this.enabled = true;
        this.opts = __assign({}, defaultOpts, opts);
        if (window.history) {
            document.addEventListener('click', function (e) { return _this.onClick(e); });
            window.addEventListener('popstate', function (e) { return _this.onPop(e); });
        }
        else {
            console.log('hotroute not supported by browser');
        }
        this.prefetch();
    }
    Router.prototype.go = function (path) {
        var prev = window.location.href;
        var next = new URL(path, location.origin).href;
        console.log(next, prev);
        return this.replaceDOM({ type: 'go', next: next, prev: prev });
    };
    Router.prototype.disable = function () {
        this.enabled = false;
    };
    Router.prototype.prefetch = function () {
        if (this.opts.prefetch) {
            quicklink();
        }
    };
    Router.prototype.onClick = function (e) {
        if (this.enabled) {
            this.replaceDOM(handleLinkClick(e));
        }
    };
    Router.prototype.onPop = function (e) {
        if (this.enabled) {
            this.replaceDOM(handlePopState(e));
        }
    };
    Router.prototype.replaceDOM = function (_a) {
        var type = _a.type, next = _a.next, prev = _a.prev;
        return __awaiter(this, void 0, void 0, function () {
            var html, nextDoc, nextHead, updatedHead;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        if (this.opts.log) {
                            console.log('⚡', type);
                        }
                        if (!(['popstate', 'link', 'go'].includes(type) && next !== prev)) return [3 /*break*/, 2];
                        if (this.opts.log) {
                            console.time('⚡');
                        }
                        // Get Page
                        window.dispatchEvent(new CustomEvent('router:fetch'));
                        return [4 /*yield*/, fetch(next).then(function (v) { return v.text(); })];
                    case 1:
                        html = _b.sent();
                        nextDoc = formatNextDocument(html);
                        document.body.innerHTML = nextDoc.body.innerHTML;
                        nextHead = nextDoc.head;
                        updatedHead = mergeHead(nextHead);
                        scrollToTop(type);
                        window.dispatchEvent(new CustomEvent('router:end'));
                        this.prefetch();
                        if (this.opts.log) {
                            console.timeEnd('⚡');
                        }
                        _b.label = 2;
                    case 2: return [2 /*return*/];
                }
            });
        });
    };
    return Router;
}());

var index = (function (opts) {
    var router = new Router(opts);
    console.log('⚡ Blue 42 Hot Route ⚡');
    return router;
});

module.exports = index;
